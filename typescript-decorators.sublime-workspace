{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"d",
				"doesNotThrow	method"
			],
			[
				"type",
				"typeof	keyword"
			],
			[
				"con",
				"constructor	keyword"
			],
			[
				"cel",
				"cellText0"
			],
			[
				"abs",
				"absPrice"
			],
			[
				"perio",
				"periodsService"
			],
			[
				"pe",
				"periodName"
			],
			[
				"per",
				"periodId"
			],
			[
				"ini",
				"initialValue"
			],
			[
				"re",
				"returnValue"
			],
			[
				"home",
				"homeSportsBookAndPeriods"
			],
			[
				"active",
				"activeSportFilter"
			],
			[
				"_",
				"_homeSportsBookAndPeriods"
			],
			[
				"leag",
				"leaguesService"
			],
			[
				"sp",
				"sportsBooksPeriods"
			],
			[
				"spo",
				"sportsBookId"
			],
			[
				"hm",
				"homeSportsBookId"
			],
			[
				"period",
				"periodName"
			],
			[
				"ro",
				"rotationFilterService"
			],
			[
				"app",
				"applyFilter"
			],
			[
				"rotation",
				"rotationFilterDirective"
			],
			[
				"to",
				"toState"
			],
			[
				"pa",
				"pageSize"
			],
			[
				"pag",
				"pagination"
			],
			[
				"comp",
				"compileDirective"
			],
			[
				"start",
				"startFrom"
			],
			[
				"page",
				"pageSize"
			],
			[
				"cur",
				"currentPage"
			],
			[
				"cu",
				"currentPage"
			],
			[
				"t",
				"totatItems"
			],
			[
				"st",
				"startFrom"
			],
			[
				"pagina",
				"pagination"
			],
			[
				"ex",
				"expectedEnablement"
			],
			[
				"lis",
				"listener"
			],
			[
				"color-",
				"color-gray"
			],
			[
				"hom",
				"homeSportsBookId"
			],
			[
				"$",
				"$log"
			],
			[
				"feedH",
				"feedHandler"
			],
			[
				"fe",
				"feedTransportSpy"
			],
			[
				"fee",
				"feedOpts"
			],
			[
				"data",
				"dataProvider"
			],
			[
				"inner",
				"innerRow"
			],
			[
				"all",
				"allEvents"
			],
			[
				"$sc",
				"$scope	AngularJS"
			],
			[
				"scr",
				"scrollTo"
			],
			[
				"amu",
				"amountInFuture"
			],
			[
				"f",
				"fromDate"
			],
			[
				"appl",
				"applySorts"
			],
			[
				"eve",
				"eventGroup"
			],
			[
				"day",
				"daysOrHours"
			],
			[
				"time",
				"timeAmount"
			],
			[
				"new",
				"newFilter"
			],
			[
				"date",
				"dateAndTimeFilterService"
			],
			[
				"da",
				"dateAndTimeFilterService"
			],
			[
				"in",
				"inViewPort"
			],
			[
				"test",
				"testForScores"
			],
			[
				"tim",
				"timeoutPromise"
			],
			[
				"sco",
				"scoreObject"
			],
			[
				"is",
				"isGameRow"
			],
			[
				"el",
				"element	AngularJS"
			],
			[
				"$inter",
				"$interval	AngularJS"
			],
			[
				"sc",
				"ScrollToTopDirective"
			],
			[
				"coutn",
				"countBySport"
			],
			[
				"cou",
				"countBySport"
			],
			[
				"sport",
				"sportId"
			],
			[
				"wag",
				"wagerTypeLines"
			],
			[
				"wa",
				"wagerTypeLines"
			],
			[
				"get",
				"getLines"
			],
			[
				"lines",
				"linesService"
			],
			[
				"b",
				"book_id"
			],
			[
				"noti",
				"notificationsService"
			],
			[
				"for",
				"forEach"
			],
			[
				"not",
				"notification"
			],
			[
				"n",
				"notifications"
			],
			[
				"nit",
				"notifications"
			],
			[
				"templa",
				"templateUrl"
			],
			[
				"r",
				"isRead"
			],
			[
				"spro",
				"sportsBookId"
			],
			[
				"spor",
				"sportsBooksService"
			],
			[
				"so",
				"sportsBooks"
			],
			[
				"en",
				"enablement"
			],
			[
				"sportsB",
				"SportsBooksService"
			],
			[
				"cre",
				"createInitialData"
			],
			[
				"g",
				"generateScoreKey"
			],
			[
				"ri",
				"rotation"
			],
			[
				"te",
				"toEqual"
			],
			[
				"dat",
				"dateRangeByLeague"
			],
			[
				"le",
				"leaguesDropDown"
			],
			[
				"c",
				"collapsedLeagues"
			],
			[
				"max",
				"maxMonth"
			],
			[
				"ev",
				"eventsService"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"pr",
				"propertyName"
			],
			[
				"di",
				"directiveScope"
			],
			[
				"available",
				"availablePeriods"
			],
			[
				"enab",
				"enabledLeagues"
			],
			[
				"w",
				"workingCopy"
			],
			[
				"lea",
				"leagueId"
			],
			[
				"peri",
				"period"
			],
			[
				"moe",
				"morePeriods"
			],
			[
				"cop",
				"copyConfiguration"
			],
			[
				"co",
				"copyConfiguration"
			],
			[
				"com",
				"compileController"
			],
			[
				"cl",
				"clearColors"
			],
			[
				"html",
				"htmlElements"
			],
			[
				"toggle",
				"toggleOpen"
			],
			[
				"primar",
				"primaryColor"
			],
			[
				"sho",
				"showCancel"
			],
			[
				"sh",
				"showCancel"
			],
			[
				"color",
				"colorSettings"
			],
			[
				"colo",
				"colorSettings"
			],
			[
				"leages",
				"leaguesService"
			],
			[
				"moc",
				"mockStorageService"
			],
			[
				"ST",
				"SPORTS_ENABLEMENT_STORAGE_KEY"
			],
			[
				"state",
				"stateStr"
			],
			[
				"KE",
				"LEAGUE_ENABLEMENT_STORAGE_KEY"
			],
			[
				"m",
				"message"
			],
			[
				"notic",
				"notifications"
			],
			[
				"no",
				"notificationsService"
			],
			[
				"fa",
				"false"
			],
			[
				"sear",
				"searchBox"
			],
			[
				"leagues",
				"leaguesEnablement"
			],
			[
				"league",
				"leagueId"
			],
			[
				"act",
				"activeSportId"
			],
			[
				"acti",
				"activate"
			],
			[
				"erro",
				"errorsCallback"
			],
			[
				"inf",
				"infosCallback"
			],
			[
				"ca",
				"calledWith"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test/precondition.test.ts",
			"settings":
			{
				"buffer_size": 1715,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/precondition.ts",
			"settings":
			{
				"buffer_size": 457,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/test/precondition.test.js",
			"settings":
			{
				"buffer_size": 2848,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/index.ts",
			"settings":
			{
				"buffer_size": 458,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tslint.json",
			"settings":
			{
				"buffer_size": 1920,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tsconfig.json",
			"settings":
			{
				"buffer_size": 214,
				"line_ending": "Unix"
			}
		},
		{
			"file": "typings/node/node.d.ts",
			"settings":
			{
				"buffer_size": 97866,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 959,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 207.0,
		"last_filter": "move",
		"selected_items":
		[
			[
				"move",
				"File: Move"
			],
			[
				"form",
				"Format: Javascript"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"mov",
				"File: Move"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"file:re",
				"File: Rename"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"FindKeyConflicts",
				"FindKeyConflicts: All Conflicts"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"format",
				"Format: Javascript"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"sub",
				"SublimeLinter: Lint This View"
			],
			[
				"jsh",
				"JSHint: Clear Annotations"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"jshin",
				"JSHint: Clear Annotations"
			],
			[
				"sublimelinter",
				"SublimeLinter: Next Error"
			],
			[
				"subli",
				"SublimeLinter: Enable Debug Mode"
			],
			[
				"subl",
				"SublimeLinter: Toggle Linter"
			],
			[
				"lint thi",
				"SublimeLinter: Lint This View"
			],
			[
				"jshint",
				"JSHint: Clear Annotations"
			],
			[
				"eslint",
				"Preferences: SublimeLinter Settings â€“ User"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"gitlog",
				"Git: Log Current File"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"git:",
				"Git: Blame"
			],
			[
				"for",
				"Format: Javascript"
			],
			[
				"sass",
				"SassBeautify"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"pacl",
				"Package Control: List Packages"
			],
			[
				"p",
				"Package Control: List Packages"
			],
			[
				"types",
				"TypeScript: FindReferences"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"beaut",
				"HTMLBeautify"
			],
			[
				"java",
				"Format: Javascript"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"js",
				"Format: Javascript"
			],
			[
				"paclist",
				"Package Control: List Packages"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"snipp<a>",
				"Snippet: <a>"
			],
			[
				"snippet: <a>",
				"Snippet: <a>"
			],
			[
				"snippet:hre",
				"Snippet: <a href=\"mailto:\"> "
			],
			[
				"ja",
				"Format: Javascript"
			],
			[
				"j",
				"JSHint"
			],
			[
				"fo",
				"Format: Javascript"
			],
			[
				"my",
				"Mylyn: Open task list in dialog"
			],
			[
				"My",
				"Mylyn: Open task list in panel"
			],
			[
				"m",
				"Mylyn: Open task list in panel"
			],
			[
				"myl",
				"Mylyn: Open task list in panel"
			],
			[
				"fpo",
				"Format: Javascript"
			],
			[
				"jsl",
				"JSHint: Clear Annotations"
			],
			[
				"mt",
				"Mylyn: Open task list"
			],
			[
				"myly",
				"Mylyn: Open task list"
			],
			[
				"mylyn",
				"Mylyn: Open task list"
			],
			[
				"",
				"Bookmarks: Clear All"
			],
			[
				"Myl",
				"Mylyn: Open task list"
			],
			[
				"Myly",
				"Mylyn: Open task list"
			],
			[
				"open",
				"Mylyn: Open task list"
			],
			[
				"ope",
				"Mylyn: Open task list"
			],
			[
				"Open",
				"Mylyn: Open task list"
			],
			[
				"Pac",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Snippet: ",
				"Snippet: Function"
			],
			[
				"snip",
				"Snippet: setTimeout function"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 493.0
	},
	"console":
	{
		"height": 435.0,
		"history":
		[
			"sublime.active_window().run_command('go_somewhere')",
			"tt",
			"tt=9",
			"t",
			"t=0",
			"ls",
			"a",
			"a=9",
			"help",
			"ls",
			"window.show_quick_panel(5, None, None)",
			"window.show_quick_panel(['a'], None, None)",
			"window.show_quick_panel(['a'], None)",
			"window.show_quick_panel([], None)",
			"window.show_quick_panel()",
			"window.show_quick_panel",
			"window",
			"self.window",
			"'tasks' in queries[0]",
			"'task' in queries[0]",
			"queries[0].contains",
			"queries[0]['displ']",
			"queries",
			"queries[0]['displayName']",
			"queries[0].tasks[0]",
			"queries[0].displayName",
			"queries[0]",
			"queries",
			"queries = json.loads(data.decode(\"utf-8\"))",
			"data = response.read()",
			"response = conn.getresponse()",
			"request = conn.request('GET', '/mylyn/api/queries')",
			"conn.connect()",
			"conn = http.client.HTTPConnection('localhost', 3001)",
			"b\"abcde\".decode(\"utf-8\")",
			"json.__format__()",
			"json.__repr__()",
			"json.__repr__",
			"sys.getdefaultencoding()",
			"import sys",
			"sys.getdefaultencoding()",
			"b'asdf'",
			"json.load",
			"json.loads(data)",
			"data",
			"data = response.read()",
			"response = conn.getresponse()",
			"request = conn.request('GET', '/mylyn/api/queries')",
			"conn.connect()",
			"conn = http.client.HTTPConnection('localhost', 3001)",
			"conn = http.client.HTTPConnection('monkeylabs.pl', 80)",
			"conn = httplib.HTTPConnection('monkeylabs.pl', 80)",
			"http.client.HTTPConnection",
			"http.client.HTTP",
			"http.client.HTTPConnection",
			"import http.client",
			"import http",
			"import httplib",
			"http.client",
			"import requests",
			"import httplib",
			"http.client.open",
			"http.client.urlopen",
			"http.client",
			"import http.client",
			"clear",
			"json.loads('[\"foo\", {\"bar\":[\"baz\", null, 1.0, 2]}]')",
			"json.dump",
			"json",
			"import json",
			"import fs",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read()) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/build",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/build/src",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/build/test",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/src",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/test",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/typings",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/typings/node",
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/typings/nodeunit"
	],
	"file_history":
	[
		"/Users/andrew.eisenberg/Eclipse/git-repos/typescript-decorators/typings/nodeunit/nodeunit.d.ts",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/teamsCell.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/gameRowDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/scoresService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/teamsCellDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/lines/line.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/games.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/innerGameTable.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/innerGameTableDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/gameRow.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/innerHeaderTableDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/wagerTypesService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/wagerTypeChooserDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/wagerTypeChooser.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/pagination/paginationDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/pagination/pagination.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/colors/lineChangesColorSettingsDialogDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/gamesDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/linesService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/linesService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/lines/lineDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/games/_table.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/gamesMainTable-NICK.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/innerHeaderTable.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/wagerTypesService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/index.module.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/dateAndTimeFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/periodsService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/rotationFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/sportsBooksService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/games/gamesDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/sportsBooksService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/leaguesService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/leagues/activeSportFilter.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/leagues/periodsDropDown.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/leagues/periodsDropDown.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/games/gameRowDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/periodsService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/leagues/leaguesDropDown.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/leagues/activeSportFilter.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/homeSportsBookService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/homeSportsBookService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/rotationFilterDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/tableFilters/dateAndTimeFilterService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/tableFilters/allGamesFilter.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/allGamesFilter.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/dateAndTimeFilterService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/tableFilters/rotationFilterService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/rotationFilterService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/colors/lineChangesColorSettingsDialog.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters/dateAndTimeFilterDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/linesDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/lines.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/wagerChooser.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/pagination/paginationDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/index.route.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsDropDown.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/leagues/periodsDropDown.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/scrollToTop.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/_form-elements.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/gulp/server.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/scoresService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/_header.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/_filters.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/test/message-manager.test.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/test/home-sports-book-provider.test.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/websocket/websocketService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/src/home-sports-book-provider.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/src/command-line-parser.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/test/feed-transport.test.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/src/feed-transport.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/src/message-manager.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/test/static-server.test.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/src/static-server.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/test/command-line-parser.test.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/tableFilters/dateAndTimeFilterDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/scrollToTopDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/gamesMainTable-New-NICK.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/games/scrollToTopDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/colors/lineChangesColorSettingsDialogDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/sports/sportLeagueFilter.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/colors/colorsService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/games/_filters.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/colors/colorsService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/secondarySportsBookFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/colors/clearColors.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/_fonticons.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/index.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/assets/sass/_buttons.scss",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/tableFilters",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/navbar/navbar.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/index.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/rotationFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/eventsService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/teamsFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/storeFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/primarySportsBookFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/unmerged/dataAndTimeFilter.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/gamesRoot.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsDropDownDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/notifications/notificationsDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notifications.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/notifications/notificationsDropDownDirective.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsDirective.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/eventsService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/sports/sportLeagueFilter.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/leagueService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/leagues/leaguesDropDown.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/gamesMainTable-NICK.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/sports/sportsDropDown.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/leagues/leaguesDropDown.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/sports/sportsDropDown.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/leagues/hasGamesFilter.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/sports/sportsTabs.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/sports/sportsTabs.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/leagues/hasGamesFilter.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/sports/sportsDropDown.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/sports/sportsWithGamesFilter.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/model/notificationsService.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/model/notificationsService.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/server/resources/fake-data.json",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/games/gamesRoot.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/test.common.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsRoot.html",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsRoot.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/test/components/notifications/notificationsController.spec.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsController.js",
		"/Users/andrew.eisenberg/Eclipse/git-repos/baalm-face/src/app/components/notifications/notificationsFilter.js"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"**/*scss",
			"**/*html",
			"**/*js",
			"**/*scss",
			"**/*js",
			"**/*html",
			"**/*",
			"**/*scss",
			"**/*js",
			"**/*",
			"**/*scss",
			"**/*",
			"**/*html",
			"**/*js",
			"**/*html",
			"**/*js",
			"**/*html",
			"**/*scss",
			"**/*html",
			"**/*scss",
			"**/*html",
			"**/*js",
			"**/*html",
			"**/*",
			"**/*html",
			"**/*js",
			"**/*scss",
			"**/*html",
			"**/*scss",
			"**/*",
			"**/*js",
			"**/*html",
			"**/*js",
			"**/*scss",
			"**/*scs",
			"**/*html",
			"**/*scss",
			"**/*js",
			"**/*spec.js",
			"**/*scss",
			"**/*html",
			"**/*js",
			"**/*ja",
			"**/*scss",
			"**/*js",
			"**/*scss",
			"**/*html",
			"**/*spec.js",
			"**/spec*",
			"**/*",
			"**/*scss",
			"**/*",
			"**/*html",
			"**/*.js",
			"**/*.html",
			"**/*.js",
			"**/*.scss",
			"**/*.html",
			"**/*.js",
			"**/*.scss",
			"**/*.html",
			"**/*.js",
			"**/*.scss",
			"**/*.js",
			"**/*",
			"**/*.html",
			"**/*.js",
			"**/*.scss",
			"**/*.spec.js",
			"**/*.scss",
			"**/*.js",
			"server/**/*.js",
			"**/*.html",
			"gulp/*.js",
			"**/*.js",
			"gulp/*.js",
			"*.js",
			"*",
			"*.js",
			"gulp/*.js",
			"*.js",
			"*",
			"gulp/*",
			"*",
			"gulp/*",
			"*",
			"",
			"gulp/*",
			"*",
			"*html",
			"*js",
			"*",
			"*js",
			"*",
			"baalm-face/gulp/**/*",
			"gulp/**/*",
			"/gulp/**/*",
			"gulp/**/*",
			"./gulp/**/*",
			"/gulp/**/*",
			"gulp/**/*",
			"*",
			"*html",
			"*js",
			"*html",
			"*scss",
			"*html",
			"*",
			"*.js",
			"*.html",
			"*.js",
			"*spec.js",
			"*",
			"*js",
			"*html",
			"*",
			"*html",
			"*",
			"*js",
			"*spec.js",
			"*html",
			"*js",
			"*html",
			"*js",
			"*html",
			"*js",
			"*html",
			"*js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"	",
			"page-loader",
			"cell-score",
			"bookIdOrRotation",
			"330",
			"320",
			"-type-empty",
			"403",
			"-type-empty",
			"team-total-lines",
			"type-item",
			"wager-col",
			"td-wager-col",
			"js-td-wager-col",
			"homeSportsBookAndPeriods",
			"wagerTypesService",
			"rawEnab",
			"createInitialEnablement",
			"listen for the",
			"periodsService",
			"getAvailablePeriods",
			"periodsService",
			"leaguesService",
			"getAvailablePeriods",
			"enablement",
			"activeSportFilter",
			": false",
			"leagueService",
			"enabledLea",
			"getEnabledAvailablePeriods",
			"getAvailablePeriods",
			"activeSportFilter",
			"getAvailablePeriods",
			"portsBooksAndPeriods",
			"homeSportsBookService",
			"dateAndTimeFilter",
			"dateAndTime",
			"DateAndTime",
			"wawgerTypeChooser",
			"WawgerTypeChooser",
			"aw",
			"wagerTypeChooserDirective",
			"agerCh",
			"awgerCh",
			"innerGameTable",
			"InnerGameTable",
			"state",
			"compileController",
			"$state",
			"{pageSize: pagination.pageSize, startFrom: 0}",
			"({pageSize: pagination.pageSize, startFrom: 0})",
			"totat",
			"scrollToTop",
			"ScrollToTop",
			"pagination-table-length",
			"disab",
			"drop-label",
			"disable",
			"disab",
			"drop-label",
			"checkbox-control",
			"isHomeSportsBook",
			"games.sportsBooksEnablement",
			"sportsBooksEnablement",
			"$state",
			"wagerTypesService",
			"$document",
			"createFeedTransport",
			"wagers-data",
			"InnerHeaderTableDirective",
			"Header",
			"games.getRowId(row)",
			"eventsService",
			"id=",
			"gameRow.row",
			"$scope",
			"$document",
			"$window",
			"TODO",
			"FIXME",
			"TODO",
			"new Date(",
			"DateAndTimeFilterService",
			"dateTimeFilter",
			"sportLeague",
			"SportLeagueFilter",
			"sportLeagueFilter",
			"sportLeague",
			"date-and-time-filter-hours",
			"click",
			"date-and-time-filter-days",
			"date-and-time",
			"range-next-days",
			"range-date",
			"radio-date-next-days",
			"button",
			"th-dropdown-inner",
			"th-dropdown",
			"th-filter",
			"ficon-trending",
			"order-date",
			"240",
			"-open",
			"th-dropdown",
			"th-filter",
			"order-time",
			"nodeun",
			"order-time",
			"range-time-from-m",
			"atTop",
			"scrollToTop",
			"--inner-wrp",
			"--inner-table",
			"g-table--inner-table",
			"js-th-get-scroll-left",
			"scroll",
			".league_id",
			"league_id",
			"isCollapsed",
			"game-winner",
			"Memph",
			"td-inner-text",
			"Chat",
			"trans",
			"overn",
			"NICK",
			"<!--",
			"andrew-isRead"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"  ",
			"bookIdOrEvent",
			"340",
			"330",
			"320",
			"",
			"leaguesService",
			"getEnabledAvailablePeriodNames",
			"rotation",
			"Rotation",
			"lines",
			"Lines",
			"awgerTypeCh",
			"wagerChooser",
			"WagerChooser",
			"total",
			"pagination",
			"Pagination",
			"Game",
			"row",
			"",
			"AllGamesFilter",
			"allGamesFilter",
			"allGames",
			"date-and-time-next-days",
			"date-and-time",
			"date-and-time-filter-days",
			"-is-read",
			"#mark-as-read-notification-",
			"button#",
			"notifications",
			"computed_league_id",
			"event.subleague_id",
			".subleague_id",
			"notifications",
			"a#notification-list-",
			"directiveScope",
			"notifications",
			"scope",
			"notifications",
			"",
			"notifi",
			"createExtraSportsBooks",
			"sports-books",
			"sportsBooks",
			"SPORTS_BOOKS",
			"sportsBooks",
			"SportsBooks",
			"wagerTypes",
			"',",
			": '",
			"sportsBooks",
			"toHaveDomElement",
			"() => ",
			" ng-if=\"gameRow.isGameRow()\" class=\"g-table--td\"",
			"() =>",
			"copyConfiguration",
			"configurationCopier",
			"'",
			"Periods",
			"periods",
			"periodsService",
			"colorKeys",
			"colorsService",
			" ng-",
			"colorsService",
			"Secondary",
			"secondary",
			"getName",
			"getItem",
			"LEAGUES_ENABLEMENT_STORAGE_KEY",
			"directiveScope.leaguesDropDown.allToggle",
			"activeSportFilter",
			"'11'",
			"'10'",
			"'9'",
			"() =>",
			"callback",
			"consoleSpy",
			"notifications",
			"Notifications",
			"Sport",
			"sport",
			"",
			"label: 'Football'",
			"label: 'Baseball'",
			"league_id:",
			"Event",
			"rotation:",
			"event",
			"eventsService",
			"2016 Ganchrow Scientific",
			"chunker",
			"League",
			"league",
			"Leagues",
			"leagues",
			"Event",
			"event",
			".BAK",
			"leaguesService",
			"event",
			"Score",
			"score",
			"line",
			"Line",
			"league",
			"League",
			"_eventValues",
			"Events",
			"events",
			"parsed",
			"6677",
			"feed",
			"Football",
			"Baseball",
			"() =>",
			"'Football'",
			"'Basketball'",
			"'Basketball",
			"() =>",
			"countByLeague",
			"_countByLeague",
			"_rotations",
			"rotationsService",
			"rotationsParser",
			"activeSport",
			"rawSports"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test/precondition.test.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1715,
						"regions":
						{
						},
						"selection":
						[
							[
								696,
								696
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 154.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/precondition.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 457,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								245
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "build/test/precondition.test.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2848,
						"regions":
						{
						},
						"selection":
						[
							[
								2461,
								2461
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 32.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/index.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 458,
						"regions":
						{
						},
						"selection":
						[
							[
								250,
								250
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "tslint.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1920,
						"regions":
						{
						},
						"selection":
						[
							[
								1913,
								1913
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 528.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "tsconfig.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 214,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								206
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "typings/node/node.d.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97866,
						"regions":
						{
						},
						"selection":
						[
							[
								2597,
								2597
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 959,
						"regions":
						{
						},
						"selection":
						[
							[
								173,
								173
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 435.0
	},
	"pinned_build_system": "",
	"project": "typescript-decorators.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"eve",
				"src/app/components/model/eventsService.js"
			],
			[
				"dateandtimefilter.html",
				"src/app/components/tableFilters/dateAndTimeFilter.html"
			],
			[
				"team",
				"src/app/components/games/teamsCellDirective.js"
			],
			[
				"te",
				"test/components/games/teamsCellDirective.spec.js"
			],
			[
				"gamerd",
				"test/components/games/gameRowDirective.spec.js"
			],
			[
				"scoresser",
				"src/app/components/model/scoresService.js"
			],
			[
				"games",
				"src/app/components/games/games.html"
			],
			[
				"game",
				"src/app/components/games/gameRow.html"
			],
			[
				"gamer",
				"src/app/components/games/gameRowDirective.js"
			],
			[
				"inn",
				"src/app/components/games/innerGameTableDirective.js"
			],
			[
				"line",
				"src/app/components/lines/line.html"
			],
			[
				"lin",
				"src/app/components/colors/lineChangesColorSettingsDialogDirective.js"
			],
			[
				"pag",
				"src/app/components/pagination/pagination.html"
			],
			[
				"wager",
				"src/app/components/games/wagerTypeChooser.html"
			],
			[
				"gam",
				"src/app/components/games/gameRow.html"
			],
			[
				"linesser",
				"src/app/components/model/linesService.js"
			],
			[
				"innh",
				"src/app/components/games/innerGameTable.html"
			],
			[
				"gamrd",
				"src/app/components/games/gameRowDirective.js"
			],
			[
				"modu",
				"src/app/index.module.js"
			],
			[
				"wa",
				"test/components/model/wagerTypesService.spec.js"
			],
			[
				"ri",
				"src/app/components/tableFilters/rotationFilter.html"
			],
			[
				"datea",
				"src/app/components/tableFilters/dateAndTimeFilter.html"
			],
			[
				"gamesrow",
				"src/app/components/games/gameRow.html"
			],
			[
				"gamesd",
				"src/app/components/games/gamesDirective.js"
			],
			[
				"peri",
				"src/app/components/model/periodsService.js"
			],
			[
				"sportsbo",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"gamed",
				"src/app/components/games/gamesDirective.js"
			],
			[
				"gamesr",
				"src/app/components/games/gameRowDirective.js"
			],
			[
				"gamesrow.h",
				"src/app/components/games/gameRow.html"
			],
			[
				"sporbsspec",
				"test/components/model/sportsBooksService.spec.js"
			],
			[
				"sporbs",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"sprbsr",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"pers",
				"src/app/components/leagues/periodsDropDown.js"
			],
			[
				"perd",
				"test/components/leagues/periodsDropDown.spec.js"
			],
			[
				"league",
				"src/app/components/model/leaguesService.js"
			],
			[
				"acti",
				"src/app/components/leagues/activeSportFilter.js"
			],
			[
				"spoer",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"per",
				"src/app/components/model/periodsService.js"
			],
			[
				"spo",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"sport",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"act",
				"src/app/components/leagues/activeSportFilter.js"
			],
			[
				"sportsb",
				"test/components/model/sportsBooksService.spec.js"
			],
			[
				"homesp",
				"src/app/components/model/homeSportsBookService.js"
			],
			[
				"inner",
				"src/app/components/games/innerHeaderTableDirective.js"
			],
			[
				"sportb",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"all",
				"test/components/tableFilters/allGamesFilter.spec.js"
			],
			[
				"da",
				"src/app/components/tableFilters/dateAndTimeFilterService.js"
			],
			[
				"dat",
				"src/app/components/tableFilters/dateAndTimeFilterDirective.js"
			],
			[
				"rotationdi",
				"src/app/components/tableFilters/rotationFilterDirective.js"
			],
			[
				"color",
				"src/app/components/colors/lineChangesColorSettingsDialog.html"
			],
			[
				"date",
				"src/app/components/tableFilters/dateAndTimeFilterDirective.js"
			],
			[
				"rotatin",
				"src/app/components/tableFilters/rotationFilter.html"
			],
			[
				"innerh",
				"src/app/components/games/innerHeaderTable.html"
			],
			[
				"notifd",
				"src/app/components/notifications/notificationsDropDown.html"
			],
			[
				"pagi",
				"src/app/components/pagination/paginationDirective.js"
			],
			[
				"gamedspec",
				"test/components/games/gamesDirective.spec.js"
			],
			[
				"rout",
				"src/app/index.route.js"
			],
			[
				"scro",
				"src/app/components/games/scrollToTop.html"
			],
			[
				"serv",
				"gulp/server.js"
			],
			[
				"sporb",
				"test/components/model/sportsBooksService.spec.js"
			],
			[
				"score",
				"test/components/model/scoresService.spec.js"
			],
			[
				"sc",
				"test/components/model/scoresService.spec.js"
			],
			[
				"home",
				"src/app/components/model/homeSportsBookService.js"
			],
			[
				"web",
				"src/app/components/websocket/websocketService.js"
			],
			[
				"feed",
				"server/src/feed-transport.js"
			],
			[
				"mess",
				"server/src/message-manager.js"
			],
			[
				"stat",
				"server/src/static-server.js"
			],
			[
				"",
				"src/app/components/games/gameRow.html"
			],
			[
				"gamr",
				"src/app/components/games/gameRow.html"
			],
			[
				"new",
				"src/app/components/unmerged/gamesMainTable-New-NICK.html"
			],
			[
				"scrol",
				"src/app/components/games/scrollToTopDirective.js"
			],
			[
				"allg",
				"src/app/components/tableFilters/allGamesFilter.js"
			],
			[
				"colo",
				"test/components/colors/lineChangesColorSettingsDialogDirective.spec.js"
			],
			[
				"filter",
				"src/assets/sass/games/_filters.scss"
			],
			[
				"filt",
				"src/assets/sass/games/_filters.scss"
			],
			[
				"linech",
				"src/app/components/colors/lineChangesColorSettingsDialogDirective.js"
			],
			[
				"colorhtml",
				"src/app/components/colors/lineChangesColorSettingsDialog.html"
			],
			[
				"mo",
				"src/app/index.module.js"
			],
			[
				"colorsdrop",
				"src/app/components/leagues/periodsDropDown.js"
			],
			[
				"fil",
				"src/assets/sass/games/_filtes.scss"
			],
			[
				"scroll",
				"src/app/components/games/scrollToTopDirective.js"
			],
			[
				"scores",
				"src/app/components/model/scoresService.js"
			],
			[
				"gamero",
				"src/app/components/games/gameRowDirective.js"
			],
			[
				"gamerod",
				"src/app/components/games/gameRowDirective.js"
			],
			[
				"teamc",
				"src/app/components/games/teamsCell.html"
			],
			[
				"gamesro",
				"src/app/components/games/gamesRoot.html"
			],
			[
				"nick",
				"src/app/components/games/gamesMainTable-NICK.html"
			],
			[
				"notdr",
				"src/app/components/notifications/notificationsDropDown.html"
			],
			[
				"notifi",
				"src/app/components/notifications/notificationsDirective.js"
			],
			[
				"notif",
				"src/app/components/notifications/notificationsDropDown.html"
			],
			[
				"evetn",
				"test/components/model/eventsService.spec.js"
			],
			[
				"book",
				"src/app/components/model/sportsBooksService.js"
			],
			[
				"even",
				"test/components/model/eventsService.spec.js"
			],
			[
				"leage",
				"src/app/components/model/leaguesService.js"
			],
			[
				"leagueser",
				"src/app/components/model/leaguesService.js"
			],
			[
				"nic",
				"src/app/components/games/gamesMainTable-NICK.html"
			],
			[
				"filte",
				"src/assets/sass/games/_filtes.scss"
			],
			[
				"leag",
				"src/app/components/leagues/leaguesDropDown.html"
			],
			[
				"sportd",
				"test/components/sports/sportsDropDown.spec.js"
			],
			[
				"sportsd",
				"src/app/components/sports/sportsDropDown.js"
			],
			[
				"sportt",
				"src/app/components/sports/sportsTabs.js"
			],
			[
				"sportst",
				"test/components/sports/sportsTabs.spec.js"
			],
			[
				"event",
				"src/app/components/model/eventsService.js"
			],
			[
				"gaerd",
				"src/app/components/games/gameRowDirective.js"
			],
			[
				"events",
				"test/components/model/eventsService.spec.js"
			],
			[
				"sportleag",
				"src/app/components/sports/sportLeagueFilter.js"
			],
			[
				"linesse",
				"src/app/components/model/linesService.js"
			],
			[
				"wagertypesservice",
				"src/app/components/model/wagerTypesService.js"
			],
			[
				"lines",
				"src/app/components/model/linesService.js"
			],
			[
				"fak",
				"server/resources/fake-data.json"
			],
			[
				"notdspe",
				"test/components/notifications/notificationsDirective.spec.js"
			],
			[
				"nots",
				"test/components/model/notificationsService.spec.js"
			],
			[
				"notser",
				"src/app/components/model/notificationsService.js"
			],
			[
				"not",
				"src/app/components/notifications/notificationsDirective.js"
			],
			[
				"noti",
				"src/app/components/notifications/notificationsDirective.js"
			],
			[
				"notifications.h",
				"src/app/components/notifications/notifications.html"
			],
			[
				"notd",
				"test/components/notifications/notificationsDirective.spec.js"
			],
			[
				"index.module.js",
				"src/app/index.module.js"
			],
			[
				"test",
				"test/test.common.js"
			],
			[
				"rou",
				"src/app/index.route.js"
			],
			[
				"notiff",
				"src/app/components/notifications/notificationsFilter.js"
			],
			[
				"mod",
				"src/app/index.module.js"
			],
			[
				"gamesroot",
				"src/app/components/games/gamesRoot.html"
			],
			[
				"var",
				"src/assets/sass/_variables.scss"
			],
			[
				"notid",
				"src/app/components/notifications/notificationsDropDown.html"
			],
			[
				"gamesdi",
				"src/app/components/games/gamesDirective.js"
			],
			[
				"cop",
				"src/app/components/model/copyConfigurationService.js"
			],
			[
				"lead",
				"test/components/leagues/leaguesDropDown.spec.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Eclipse/git-repos/com.tasktop.provisioning/provisioning.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"HelpController"
			],
			[
				"isRepositoryForComponent",
				"isRepositoryForComponent"
			],
			[
				"collectionFormController",
				"CollectionFormController"
			],
			[
				"doRefresh",
				"doRefresh"
			],
			[
				"refreshOp",
				"refreshOptions"
			],
			[
				"refresh",
				"refresh"
			],
			[
				"suggestMapping",
				"suggestMapping"
			],
			[
				"findP",
				"findPair"
			],
			[
				"canSho",
				"canShowFlow"
			],
			[
				"canShowFlow",
				"canShowFlow"
			],
			[
				"configureServices",
				"configureServices"
			],
			[
				"convertToFieldDescriptor",
				"convertToFieldDescriptor"
			],
			[
				"refre",
				"refreshProjects"
			],
			[
				"getFormFieldId",
				"getFormFieldId"
			],
			[
				"enableProxy",
				"enableProxy"
			],
			[
				"isShowPartitionForm",
				"isShowPartitionForm"
			],
			[
				"areAllGroupsEmpty",
				"areAllGroupsEmpty"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 304.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
